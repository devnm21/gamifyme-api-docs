swagger: '2.0'
info:
  version: 1.0.8
  title: GamifyMe API
  description: |
    # Welcome to the GamifyMe API documentation. 
    #### Please note that this API requires authentication using the `x-gamifyme-token header`. 
    
    You can find your API key in `API Docs` section of your dashboard
    To authenticate, please click on the 'Authorize' button and enter your API key.
    
    ## Rate Limit
    For the purpose of beta the APIs are *rate-limited to a maximum of 500 requests per day* (refer `X-GamifyMe-Rate-Limit` in response as it might change)  per API Key(User).
    
    
    When the limit is exceeded, the server will return a 429 Too Many Requests status code.
    
    To check the current rate limit status, the response headers include the `X-GamifyMe-Rate-Limit` and `X-GamifyMe-Remaining-Calls` headers.
    
    The `X-GamifyMe-Remaining-Calls` header indicates the total number of requests allowed for rest of the day while `X-GamifyMe-Rate-Limit` header
    indicates the remaining number of requests available for the current day.
    
    You can also refer `X-GamifyMe-Limit-Reset-In` which is when the limit will reset (the given unit will be in seconds)
    
    ## Credit System
    
    ### Payout
    For Indian users, the payout will be made in 6-7 days directly to the bank.
    For other nationals, the payout will be initated in within 7 days to Paypal id
    
    ### Charges
    No charges until total payments cross $10,000

host: bg6pwcfvp3.execute-api.ap-south-1.amazonaws.com
basePath: /v1
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    name: x-gamifyme-token
    in: header
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /players:
    post:
      security:
        - ApiKeyAuth: [ ]
      summary: Add players/users to the system
      description: Add players/users to the system. These players can further be used to add points, credits or badges
      consumes:
        - application/json
      tags:
        - Players
      parameters:
        - in: body
          name: player
          description: The user to create. The userName is treated as a publicly available name
          schema:
            type: object
            required:
              - fullname
              - uid
            properties:
              uid:
                type: string
              username:
                type: string
              fullname:
                type: string
              initialPoints:
                type: number
              initialCredits:
                type: number
      responses:
        '201':
          description: Points added successfully
        '400':
          description: Invalid input parameters
        '401':
          description: Unauthorized request
        '429':
          description: Rate limit exceeded
  /players/{playerId}:
    get:
      security:
        - ApiKeyAuth: [ ]
      summary: Get player by Id
      description: Get player information such as credits, points and other information.
      consumes:
        - application/json
      tags:
        - Players
      parameters:
        - in: path
          name: playerId
          schema:
              type: string
              required: true
      responses:
        '200':
          description: Player
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid input parameters
        '401':
          description: Unauthorized request
        '429':
          description: Rate limit exceeded
  /players/{playerId}/credits/add:
    post:
      security:
        - ApiKeyAuth: [ ]
      summary: Add credits to players/users in the system
      description: The API returns a stripe payment link. If the payment is completed, the credits will be added to the player.
        As an application you are to redirect the user to the link
      consumes:
        - application/json
      tags:
        - Credit System
      parameters:
        - in: body
          name: delta
          description: The points to add and the price for it. Example - 20 credits for $20. Note that the price will be in usd
          schema:
            type: object
            required:
              - credits
              - price
              - refId
            properties:
              credits:
                type: number
                description: positive integer only
              price:
                type: number
              refId:
                type: string
      responses:
        '200':
          description: Link created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique id for the payment attempt.
                  paymentLink:
                    type: string
                    description: Payment Link
        '400':
          description: Invalid input parameters
        '401':
          description: Unauthorized request
        '429':
          description: Rate limit exceeded
  /players/{playerId}/credits/deduct:
    post:
      security:
        - ApiKeyAuth: [ ]
      summary: Deduct credits to players/users in the system
      description: The API will subtract the given credits from the available credits of the player specified.
      consumes:
        - application/json
      tags:
        - Credit System
      parameters:
        - in: body
          name: delta
          description: The credits to use from a user. This will subtract from the total credits and return the remaining credits. It will error if the amount is greater than the available amount.
          schema:
            type: object
            required:
              - credits
              - refId
              - purpose
            properties:
              credits:
                type: number
              refId:
                type: string
              purpose:
                type: string
      responses:
        '201':
          description: Points removed successfully
        '400':
          description: Invalid input parameters
        '401':
          description: Unauthorized request
        '429':
          description: Rate limit exceeded
  /boards/points:
    post:
      security:
        - ApiKeyAuth: [ ]
      summary: Add points to a player on a board
      description: Add points to a player on a board
      tags:
        - Points
      parameters:
        - name: boardId
          in: body
          description: ID of the board
          required: true
          schema:
            type: string
        - name: playerId
          in: body
          description: ID of the player
          required: true
          schema:
            type: string
        - name: points
          in: body
          description: Number of points to add
          required: true
          schema:
            type: number
      responses:
        '201':
          description: Points added successfully
        '400':
          description: Invalid input parameters
        '401':
          description: Unauthorized request
        '429':
          description: Rate limit exceeded
  /transactions:
    get:
      security:
        - ApiKeyAuth: [ ]
      summary: Fetch transactions
      description: Get all the transactions done for purchasing credits in your app
      tags:
        - Transactions
      parameters:
        - name: 'startDate'
          in: query
          description: timestamp value in ISO format or unix timestamp from where the transactions to sort
          schema:
            type: string
        - name: page
          in: query
          description: page number. The API returns 20 transactions per request by defalut
          schema:
            type: number
        - name: playerId
          in: query
          description: Filter for a specific player
          schema:
            type: string
        - name: populate
          in: query
          description: reference documents that can be populated. This API can populate -> 'player'
          schema:
            type: string
      responses:
        '200':
          description: Fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/definitions/Transaction'
                properties:
                  id:
                    type: string
                    description: Unique id for the payment attempt.
                  paymentLink:
                    type: string
                    description: Payment Link
        '400':
          description: Invalid input parameters
        '401':
          description: Unauthorized request
        '429':
          description: Rate limit exceeded
  /transactions/{id}:
    get:
      security:
        - ApiKeyAuth: [ ]
      summary: Fetch a transaction
      description: Get a particular transaction by it's id
      tags:
        - Transactions
      parameters:
        - name: populate
          in: query
          description: reference documents that can be populated. This API can populate -> 'player'
          schema:
            type: string
      responses:
        '200':
          description: Fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/Transaction'

        '400':
          description: Invalid input parameters
        '401':
          description: Unauthorized request
        '429':
          description: Rate limit exceeded
definitions:
  Transactions:
    type: array
    items:
      $ref: '#/definitions/ContactModel'

  Transaction:
    type: object
    properties:
      id:
        type: integer
        example: 1
      playerId:
        type: string
        example: 6adcwcerf24552
      credits:
        type: number
        example: 10
      amount:
        type: number
        example: 5.29
      player:
        description: if populated
        $ref: '#/definitions/Player'
  Player:
    type: object
    properties:
      displayName:
        type: integer
        example: 1
      fullName:
        type: string
        example: 6adcwcerf24552
      profilePictureUrl:
        type: number
        example: 10
      playerId:
        type: number
        example: 5.29
      id:
        type: number
        example: 5.29





